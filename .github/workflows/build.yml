name: Run Gradle Build
on: [push, pull_request]
jobs:
  gradle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Get Gradle version
        run: |
          VERSION=$(grep -Po '^version = .*' gradle.properties | cut -d= -f2)
          echo "$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        id: get_version
      - name: Get short commit sha
        id: short_sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Check if version is pre-release
        run: |
          if [[ "$VERSION" == *-pre* ]]
          then
            echo "Version is pre-release"
            RELEASE_TYPE="pre-release"
          else
            echo "Version is full release"
            RELEASE_TYPE="full"
          fi
          echo "RELEASE_TYPE=$RELEASE_TYPE" >> $GITHUB_OUTPUT
        id: check-release-type
      - uses: actions/setup-java@v3
        name: Setup Java
        with:
          distribution: temurin
          java-version: 17
      - uses: gradle/gradle-build-action@v2
        name: Setup Gradle
      - name: Execute Gradle build
        run: ./gradlew build
      - uses: actions/upload-artifact@v3
        name: Upload built mod JAR
        with:
          name: mod-jar
          path: build/libs/*.jar
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: ${{ steps.check-release-type.outputs.RELEASE_TYPE == 'pre-release' }}
          release_name: ${{ steps.get_version.outputs.VERSION }}
          tag_name: ${{ steps.get_version.outputs.VERSION }}.${{ steps.short_sha.outputs.sha_short }}
          body: |
            Changelog:
            ${{ github.event.head_commit.message }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload artifacts
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/*.jar
          asset_content_type: application/java-archive
        env:
          GITHUB_TOKEN: ${{ github.token }}